class cellulaire_automata:
    def __init__(self, hoogte, breedte, begin):
        self.hoogte = hoogte
        self.breedte = breedte
        self.begin = begin
    
    def __str__(self):
        return str(self.maak_rooster(self.begin))
    
    def maak_rooster(self, begin):
        import math
        rooster = [[0]*self.breedte]*self.hoogte
        lijst1 = [0 for i in range(math.floor((self.breedte-3)/2))] 
        lijst2 = [0 for i in range(math.ceil((self.breedte-3)/2))]
        rooster[0] = lijst1+begin+lijst2
        return rooster
    
    def evolueer():
        pass

class een_dimensionaal(cellulaire_automata):
    
    def __init__(self, hoogte, breedte, begin, lijst0, lijst1):
        self.hoogte = hoogte
        self.breedte = breedte
        self.begin = begin
        self.lijst0 = lijst0
        self.lijst1 = lijst1
        
    def buren(self, begin):
        rooster = super().maak_rooster(begin)
        tijdelijk = []
        grote_lijst = []
        for i in range(1, self.hoogte):
            for j in range(self.breedte):
                if j == 0:
                    tijdelijk.append([rooster[i-1][-1], rooster[i-1][j], rooster[i-1][j+1]])
                elif j == self.breedte - 1:
                    tijdelijk.append([rooster[i-1][j-1], rooster[i-1][j], rooster[i-1][0]])
                else:
                    tijdelijk.append([rooster[i-1][j-1], rooster[i-1][j], rooster[i-1][j+1]])
            lijst = self.evolueren(rooster[i])
            rooster[i] = lijst
            grote_lijst.append(lijst)
        return grote_lijst
    
    def grafisch(self):
        import matplotlib.pyplot as plt
        plt.figure(figsize=(10,6))
        plt.imshow(self.buren(self.begin), cmap='hot')

    def evolueren(self, burenlijst):
        regel = []
        lijst_0 = [i for i in self.lijst0]
        lijst_1 = [i for i in self.lijst1]
        for lijst in burenlijst:
            if lijst in lijst_0:
                regel.append(0)
            elif lijst in lijst_1:
                regel.append(1)
        return regel
    
    def __str__(self):
        return str((self.buren(self.begin)))
    
class twee_dimensionaal(cellulaire_automata):
    
    def __init__(self, hoogte, breedte):
        self.hoogte = hoogte
        self.breedte = breedte
    
    
a = een_dimensionaal(10, 6, [0,1,0], [[1, 1, 1], [1, 1, 0], [1, 0, 1], [0, 0, 0]], [[1, 0, 0], [0, 1, 1], [0, 1, 0], [0, 0, 1]])
print(a)
